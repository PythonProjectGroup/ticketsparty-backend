# Generated by Django 3.0.3 on 2020-04-04 18:06

import backend.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('name', models.CharField(blank=True, help_text='Imię i nazwisko pracownika', max_length=128, verbose_name='nazwa')),
                ('last_ip', models.CharField(blank=True, help_text='Ostatnie ip z którego pracownik się logował', max_length=64, null=True, verbose_name='last_login')),
                ('phone', models.CharField(blank=True, help_text='telefon do pracownika', max_length=32, verbose_name='telefon')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', backend.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Nazwa firmy lub imię i nazwisko', max_length=128, verbose_name='nazwa')),
                ('is_company', models.BooleanField(help_text='Zaznacz jeśli jest to firma (odznacz jeśli osoba prywatna)', verbose_name='czy jest to firma')),
                ('street', models.CharField(blank=True, help_text='Podaj nazwę ulicy', max_length=64, verbose_name='ulica')),
                ('home_number', models.CharField(blank=True, help_text='Podaj numer domu i mieszkania', max_length=32, verbose_name='nr domu')),
                ('city', models.CharField(blank=True, help_text='Miasto z którego klient pochodzi', max_length=32, verbose_name='miasto')),
                ('country', models.CharField(blank=True, help_text='Kraj z którego klient pochodzi', max_length=32, verbose_name='kraj')),
                ('nip', models.CharField(blank=True, help_text='Podaj nip firmy (puste jeśli nie dotyczy)', max_length=64, verbose_name='nip')),
                ('regon', models.CharField(blank=True, help_text='Podaj regon firmy (puste jeśli nie dotyczy)', max_length=64, verbose_name='regon')),
                ('phone', models.CharField(blank=True, help_text='Podaj główny numer klienta', max_length=32, verbose_name='telefon')),
                ('email', models.CharField(blank=True, help_text='Podaj główny e-mail klienta', max_length=128, verbose_name='email')),
                ('description', models.TextField(blank=True, help_text='Krótka notka na temat klienta', verbose_name='opis')),
                ('notes', models.TextField(blank=True, help_text='Komentarze dotyczące klienta', verbose_name='komentarze')),
                ('keeper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opiekun_klienta', to=settings.AUTH_USER_MODEL, verbose_name='Opiekun')),
            ],
            options={
                'verbose_name': 'Klient',
                'verbose_name_plural': 'Klienci',
            },
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(help_text='ilosc produktu (szt)', verbose_name='ilosc')),
                ('price', models.DecimalField(decimal_places=2, help_text='Cena za maseczki (ogółem)', max_digits=12, verbose_name='cena')),
            ],
            options={
                'verbose_name': 'Wpis',
                'verbose_name_plural': 'Wpisy',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Imię i nazwisko osoby kontaktowej', max_length=128, verbose_name='nazwa')),
                ('description', models.TextField(help_text='Opis produktu', verbose_name='description')),
                ('notes', models.TextField(blank=True, help_text='Komentarze dotyczące produktu', verbose_name='komentarze')),
            ],
            options={
                'verbose_name': 'Produkty',
                'verbose_name_plural': 'Produkty',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(help_text='krótki opis inwestycji', verbose_name='opis')),
                ('notes', models.TextField(help_text='komentarze dotyczące inwestycji', verbose_name='komentarze')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Client', verbose_name='Klient')),
                ('items', models.ManyToManyField(to='backend.Entry')),
                ('keeper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opiekun_zamowienia', to=settings.AUTH_USER_MODEL, verbose_name='Opiekun')),
            ],
            options={
                'verbose_name': 'Zamówienie',
                'verbose_name_plural': 'Zamówienia',
            },
        ),
        migrations.AddField(
            model_name='entry',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opiekun_inwestycji', to='backend.Product', verbose_name='Produkt'),
        ),
    ]
